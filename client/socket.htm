



<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <title>在线websocket测试在线工具-ouapi</title>
    <meta name="robots" content="all" />
    <meta name="keywords" content="在线,websocket,测试工具" />
    <meta name="description" content="在线,websocket,测试工具" />
</head>

<body >  
<div>
<input type='text' value='ws:127.0.0.1:8739' class="form-control" style='width:390px;display:inline'id='wsaddr'/> 
<div class="btn-group" role="group" aria-label="...">
  <button type="button" class="btn btn-default" onclick='addsocket();'>连接</button>
  <button type="button" class="btn btn-default" onclick='closesocket();'>断开</button>
</div>
<div style='margin-top:10px;margin-button:10px'>
<pre>本工具主要是为了测试服务端websocket功能是否完善可用而开发，主要是利用html5 的websocket去连接服务端的websocket,因此，
无论你是内网还是外网都可使用!服务端只是实现了接受和发送，这里只是测试而已！</pre>
</div>
</div>
<div class="row" >
<div id="output" style="border:1px solid #ccc;height:365px;overflow: auto;margin-left:15px"></div>
  <div class="col-lg-6">
    
    <div class="input-group" style=''>
      <input type="text"id='message'  class="form-control" style='width:810px' placeholder="待发信息" onkeydown="en(event);">
      <span class="input-group-btn">
        <button class="btn btn-default" type="button" onclick="doSend();">发送</button>
      </span>
    </div>
  </div>
</div>
</div>
<script language="javascript" type="text/javascript">
function   formatDate(now)   {    
              var   year=now.getFullYear();     
              var   month=now.getMonth()+1;     
              var   date=now.getDate();     
              var   hour=now.getHours();     
              var   minute=now.getMinutes();     
              var   second=now.getSeconds();     
              return   year+"-"+(month=month<10?("0"+month):month)+"-"+(date=date<10?("0"+date):date)+" "+(hour=hour<10?("0"+hour):hour)+":"+(minute=minute<10?("0"+minute):minute)+":"+(second=second<10?("0"+second):second);     
   } 
var output;
var websocket;
function init() {
    output = document.getElementById("output");
    testWebSocket();
}

function addsocket() {
	var wsaddr = document.getElementById("wsaddr").value;
	if (wsaddr=='') {
		alert("请填写websocket的地址");
		return false;
	}
	StartWebSocket(wsaddr);
}

function closesocket() {
	websocket.close();
}

function StartWebSocket(wsUri) {
    websocket = new WebSocket(wsUri);
    websocket.onopen = function(evt) { onOpen(evt) };
    websocket.onclose = function(evt) { onClose(evt) };
    websocket.onmessage = function(evt) { onMessage(evt) };
    websocket.onerror = function(evt) { onError(evt) }; }
	
    function onOpen(evt) { 
	   writeToScreen("<span style='color:red'>连接成功，现在你可以发送信息啦！！！</span>");
	}
    function onClose(evt) {
        writeToScreen("<span style='color:red'>websocket连接已断开!!!</span>");
		websocket.close();
	}
    function onMessage(evt) {
		var reader;
		var message;
	if (event.data instanceof Blob) {
		reader = new FileReader();
		reader.onload = function() {
			handleMessage(reader);
		};
		reader.readAsText(event.data);
	}else{
		//默认为文本类型
		writeToScreen('<span style="color:blue">服务端回应&nbsp;'+formatDate(new Date())+'</span><br/><span class="bubble">'+ event.data+'</span>');	
	}
}
function handleMessage(reader){
	message = reader.result;
	writeToScreen('<span style="color:blue">服务端回应&nbsp;'+formatDate(new Date())+'</span><br/><span class="bubble">'+ message+'</span>');	
	 }
    function onError(evt) {
        writeToScreen('<span style="color: red;">发生错误:</span> '+ evt.data);
	}
    function doSend() {
	    var message=document.getElementById("message").value;
		if (message=='') {
			alert("请先填写发送信息");
			$("#message").focus();
			return false;
		}
		if (typeof websocket==="undefined"){
			alert("websocket还没有连接，或者连接失败，请检测");
			return false;
		}
		if (websocket.readyState==3) {
			alert("websocket已经关闭，请重新连接");
			return false;
		}
		console.log(websocket);
		document.getElementById("message").value="";
		writeToScreen('<span style="color:green">你发送的信息&nbsp;'+formatDate(new Date())+'</span><br/>'+ message);
        websocket.send(message);
		}

    function writeToScreen(message) {
      
       
        
		var div = "<div class='newmessage'>"+message+"</div>";
		var d = document.getElementById("output");
        var doScroll = d.scrollTop == d.scrollHeight - d.clientHeight;
		var newchild = document.createElement("p");
         newchild.innerHTML =div;
		 document.getElementById("output").appendChild(newchild);
        if (doScroll) {
            d.scrollTop = d.scrollHeight - d.clientHeight;
        }
		}

   
    function en(event){
		var evt=evt?evt:(window.event?window.event:null);
        if (evt.keyCode==13){
         doSend()
        }
	}
	

</script> 



</body>
</html>
